{"ast":null,"code":"var _jsxFileName = \"/home/kushagra/Downloads/my-app/src/Components/User.js/DisplayUsers.js\";\nimport { List } from \"antd\";\nimport React, { PureComponent } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DisplayUsers extends PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(List, {\n      itemLayout: \"vertical\",\n      dataSource: this.props.userList,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        actions: [/*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"edit\"\n        }, \"list-loadmore-edit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"more\"\n        }, \"list-loadmore-more\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)],\n        children: Object.keys(item).map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// import { Avatar, Button, List, Skeleton } from 'antd';\n// import React, { useEffect, useState } from 'react';\n\n// interface DataType {\n//   gender?: string;\n//   name: {\n//     title?: string;\n//     first?: string;\n//     last?: string;\n//   };\n//   email?: string;\n//   picture: {\n//     large?: string;\n//     medium?: string;\n//     thumbnail?: string;\n//   };\n//   nat?: string;\n//   loading: boolean;\n// }\n\n// const count = 3;\n// const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat,picture&noinfo`;\n\n// const App: React.FC = () => {\n//   const [initLoading, setInitLoading] = useState(true);\n//   const [loading, setLoading] = useState(false);\n//   const [data, setData] = useState<DataType[]>([]);\n//   const [list, setList] = useState<DataType[]>([]);\n\n//   useEffect(() => {\n//     fetch(fakeDataUrl)\n//       .then(res => res.json())\n//       .then(res => {\n//         setInitLoading(false);\n//         setData(res.results);\n//         setList(res.results);\n//       });\n//   }, []);\n\n//   const onLoadMore = () => {\n//     setLoading(true);\n//     setList(\n//       data.concat([...new Array(count)].map(() => ({ loading: true, name: {}, picture: {} }))),\n//     );\n//     fetch(fakeDataUrl)\n//       .then(res => res.json())\n//       .then(res => {\n//         const newData = data.concat(res.results);\n//         setData(newData);\n//         setList(newData);\n//         setLoading(false);\n//         // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n//         // In real scene, you can using public method of react-virtualized:\n//         // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n//         window.dispatchEvent(new Event('resize'));\n//       });\n//   };\n\n//   const loadMore =\n//     !initLoading && !loading ? (\n//       <div\n//         style={{\n//           textAlign: 'center',\n//           marginTop: 12,\n//           height: 32,\n//           lineHeight: '32px',\n//         }}\n//       >\n//         <Button onClick={onLoadMore}>loading more</Button>\n//       </div>\n//     ) : null;\n\n//   return (\n//     <List\n//       className=\"demo-loadmore-list\"\n//       loading={initLoading}\n//       itemLayout=\"horizontal\"\n//       loadMore={loadMore}\n//       dataSource={list}\n//       renderItem={item => (\n//         <List.Item\n//           actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>]}\n//         >\n//           <Skeleton avatar title={false} loading={item.loading} active>\n//             <List.Item.Meta\n//               avatar={<Avatar src={item.picture.large} />}\n//               title={<a href=\"https://ant.design\">{item.name?.last}</a>}\n//               description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n//             />\n//             <div>content</div>\n//           </Skeleton>\n//         </List.Item>\n//       )}\n//     />\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":["List","React","PureComponent","DisplayUsers","render","props","userList","item","Object","keys","map"],"sources":["/home/kushagra/Downloads/my-app/src/Components/User.js/DisplayUsers.js"],"sourcesContent":["import { List } from \"antd\";\nimport React, { PureComponent } from \"react\";\n\nexport default class DisplayUsers extends PureComponent {\n  render() {\n    return (\n      <List\n        itemLayout=\"vertical\"\n        dataSource={this.props.userList}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <a key=\"list-loadmore-edit\">edit</a>,\n              <a key=\"list-loadmore-more\">more</a>,\n            ]}\n          >\n            {Object.keys(item).map((item) => {\n              return <div>{item}</div>;\n            })}\n          </List.Item>\n        )}\n      />\n    );\n  }\n}\n\n// import { Avatar, Button, List, Skeleton } from 'antd';\n// import React, { useEffect, useState } from 'react';\n\n// interface DataType {\n//   gender?: string;\n//   name: {\n//     title?: string;\n//     first?: string;\n//     last?: string;\n//   };\n//   email?: string;\n//   picture: {\n//     large?: string;\n//     medium?: string;\n//     thumbnail?: string;\n//   };\n//   nat?: string;\n//   loading: boolean;\n// }\n\n// const count = 3;\n// const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat,picture&noinfo`;\n\n// const App: React.FC = () => {\n//   const [initLoading, setInitLoading] = useState(true);\n//   const [loading, setLoading] = useState(false);\n//   const [data, setData] = useState<DataType[]>([]);\n//   const [list, setList] = useState<DataType[]>([]);\n\n//   useEffect(() => {\n//     fetch(fakeDataUrl)\n//       .then(res => res.json())\n//       .then(res => {\n//         setInitLoading(false);\n//         setData(res.results);\n//         setList(res.results);\n//       });\n//   }, []);\n\n//   const onLoadMore = () => {\n//     setLoading(true);\n//     setList(\n//       data.concat([...new Array(count)].map(() => ({ loading: true, name: {}, picture: {} }))),\n//     );\n//     fetch(fakeDataUrl)\n//       .then(res => res.json())\n//       .then(res => {\n//         const newData = data.concat(res.results);\n//         setData(newData);\n//         setList(newData);\n//         setLoading(false);\n//         // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n//         // In real scene, you can using public method of react-virtualized:\n//         // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n//         window.dispatchEvent(new Event('resize'));\n//       });\n//   };\n\n//   const loadMore =\n//     !initLoading && !loading ? (\n//       <div\n//         style={{\n//           textAlign: 'center',\n//           marginTop: 12,\n//           height: 32,\n//           lineHeight: '32px',\n//         }}\n//       >\n//         <Button onClick={onLoadMore}>loading more</Button>\n//       </div>\n//     ) : null;\n\n//   return (\n//     <List\n//       className=\"demo-loadmore-list\"\n//       loading={initLoading}\n//       itemLayout=\"horizontal\"\n//       loadMore={loadMore}\n//       dataSource={list}\n//       renderItem={item => (\n//         <List.Item\n//           actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>]}\n//         >\n//           <Skeleton avatar title={false} loading={item.loading} active>\n//             <List.Item.Meta\n//               avatar={<Avatar src={item.picture.large} />}\n//               title={<a href=\"https://ant.design\">{item.name?.last}</a>}\n//               description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n//             />\n//             <div>content</div>\n//           </Skeleton>\n//         </List.Item>\n//       )}\n//     />\n//   );\n// };\n\n// export default App;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,OAAOC,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAAC;AAE7C,eAAe,MAAMC,YAAY,SAASD,aAAa,CAAC;EACtDE,MAAM,GAAG;IACP,oBACE,QAAC,IAAI;MACH,UAAU,EAAC,UAAU;MACrB,UAAU,EAAE,IAAI,CAACC,KAAK,CAACC,QAAS;MAChC,UAAU,EAAGC,IAAI,iBACf,QAAC,IAAI,CAAC,IAAI;QACR,OAAO,EAAE,cACP;UAAA;QAAA,GAAO,oBAAoB;UAAA;UAAA;UAAA;QAAA,QAAS,eACpC;UAAA;QAAA,GAAO,oBAAoB;UAAA;UAAA;UAAA;QAAA,QAAS,CACpC;QAAA,UAEDC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,GAAG,CAAEH,IAAI,IAAK;UAC/B,oBAAO;YAAA,UAAMA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAO;QAC1B,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IAEJ;MAAA;MAAA;MAAA;IAAA,QACF;EAEN;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}